{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"aac78eec-05a0-5965-8c23-fa00525d63e6","excerpt":"👋 소개 자바 진영의 테스팅 프레임워크로는 JUnit과 TestNG가 있다. TestNG는 JUnit에 비해 조금 생소한데, 이 글을 통해 testng와 JUnit의 차이점과 언제 TestNG를 쓰는게 좋은지 등을 알아보자. 🚀 TestNG란? TestNG는 JUnit의 여러 단점을 개선하기 위해 등장한 자바 기반의 테스트 프레임워크이다. JUnit과 동일하게 테스트의 모든 범위를 포괄해 지원하지만 JUnit 보다 더 다양한 기능을 지원한다. TestNG를 사용하는 간단한 예시를 보자. 생소한 group이라는 annotation attribute가 보인다. 밑에서 설명하겠지만, TestNG는 테스트의 그룹화를 지원한다. 이렇게 만든 테스트를 실행하려면 테스트 메서드를 빌드 디렉터리로 컴파일 후 shell, ant 혹은 xml을 통해 실행하면 된다. ant를 통한 실행 TestNG.xml을 통한 실행 JDK별 TestNG 버전 JDK8: TestNG v7.5 이상 JDK11 이상: …","frontmatter":{"categories":"블로그 featured","title":"TestNG 가볍게 살펴보기","date":"February 17, 2024"},"fields":{"slug":"/testng/"}}},{"node":{"id":"13c0788d-3523-57a1-811a-cf2a1c8ef69b","excerpt":"👋 소개 새해를 맞아 지난 7개월동안 배우고 경험한 것들에 대해 적어보려 한다. 회고 내가 하는 일 내가 하는 일은 생각했던 개발자의 업무보다는 이슈 대응 엔지니어에 가깝다.\n회사의 시스템이나 코드가 워낙 방대해 지금까지는 코드 작성 업무가 이슈에 관한 것 외에는 없었고, 솔직히 짤 엄두도 나지 않았다.\n지금와서는 그래도 JIRA를 습관적으로 계속 보며 내가 앞으로 어떤 부분을 개발해야 하는지 익숙해져야 했다고 생각하긴 하지만… 뭐 이미 못한거니… 어쩔수 없다.\n지금까지 한 업무는 주로 이슈 대응이라 본격적으로 업무를 한 4개월 동안은 이전 이슈 분석, GC 로그 및 힙 덤프 분석, 스레드 덤프 분석, 회사의 로거로 찍힌 로그 분석 등을 주로 했다.\n지금까지 대부분 로그나 공식 문서같은 글들 위주로 봤기에 이제 직접 코딩을 해야겠다는 심각성을 느껴 JIRA에서 개발하기로 선택된 건들을 찾아보다가 테스트 관련건이 있어 내가 하겠다고 사수님께 말씀드려 할당을 받긴 했는데, 이제 연휴가…","frontmatter":{"categories":"블로그 featured","title":"신입의 7개월차 회고","date":"February 12, 2024"},"fields":{"slug":"/mywork/"}}},{"node":{"id":"194b7102-914c-5c73-9840-62c12edf06e7","excerpt":"👋 소개 Tomcat의 취약점 중 하나인 CVE-2020-1938(GhostCat)은 Tomcat의 AJP 커넥터에서 발생한 취약점으로 WEB-INF/**에 접근해 서버의 파일을 탈취하거나 탈취한 코드를 바탕으로 악성 코드를 실행시킬 수 있다. 이를 위해서는 AJP 포트가 기본적으로 노출이 되어 있어야 하고 인터넷을 통해서 접근이 가능해야 한다는 전제 조건이 필요하다. 이 취약점은 서버 코드에서 특별한 세팅 없이 클라이언트가 바로 공격이 가능하기 때문이다. 여기서 왜 Tomcat에서 해당 취약점이 발생했고 어떻게 해결했는지 확인해보자. 🚀 취약점 원인 분석 Tomcat은 주로 서블릿 엔진의 역할을 하기에 클라이언트로부터 받은 요청을 요청된 자원의 처리 엔진에 넘겨주는 작업이 필요하다. 이를 위해 RequestDispacher.java 라는 코드에 정의된 여러 상수값들을 사용하는데 Tomcat의 경우 DefaultServlet이라는 클래스에서 해당 값들을 사용해 대상 서블릿의 경로를…","frontmatter":{"categories":"블로그 featured","title":"CVE-2020-1938(GhostCat) 취약점 분석하기","date":"December 20, 2023"},"fields":{"slug":"/ghostcat-test/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"최주연","bio":{"role":"개발자","description":["어려운 내용을 쉽게 전달하는"],"thumbnail":"sample.png"},"social":{"github":"https://github.com/jycforest29","linkedIn":"","email":"jycforest29.dev@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}